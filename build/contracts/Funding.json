{
  "contractName": "Funding",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "isAvaliable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "moneyPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fundTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startFunding",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endFunding",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"endFunding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isAvaliable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"moneyPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startFunding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Funding.sol\":\"Funding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Funding.sol\":{\"keccak256\":\"0xdf87fae9626b9dce95647e4ffb1701bbb48686f93e8714f804b4a9ee4f45ab85\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://e9e0e7c4d0b5e92727743846616266a4ea68020162d45fb2e64139a8c28374ac\",\"dweb:/ipfs/QmP68smPSwpEHUsK2RYeydfYjszTBciKTMNhCzVD9qzsiF\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061060b806100606000396000f3fe60806040526004361061004a5760003560e01c80630cf010511461004f5780631c8eac0f14610066578063342354431461007d57806374f21848146100a8578063d9a9ab78146100b2575b600080fd5b34801561005b57600080fd5b506100646100dd565b005b34801561007257600080fd5b5061007b610188565b005b34801561008957600080fd5b5061009261029c565b60405161009f9190610338565b60405180910390f35b6100b06102a2565b005b3480156100be57600080fd5b506100c761030c565b6040516100d4919061036e565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101629061040c565b60405180910390fd5b6001600260006101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020d9061049e565b60405180910390fd5b6000600260006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610299573d6000803e3d6000fd5b50565b60015481565b600260009054906101000a900460ff166102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610530565b60405180910390fd5b3460016000828254610303919061057f565b92505081905550565b600260009054906101000a900460ff1681565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b60008115159050919050565b61036881610353565b82525050565b6000602082019050610383600083018461035f565b92915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e20737461727420746869732066756e64696e60008201527f672070726f6a6563740000000000000000000000000000000000000000000000602082015250565b60006103f6602983610389565b91506104018261039a565b604082019050919050565b60006020820190508181036000830152610425816103e9565b9050919050565b7f4f6e6c79206f776e65722063616e20636c6f736520746869732066756e64696e60008201527f672070726f6a6563740000000000000000000000000000000000000000000000602082015250565b6000610488602983610389565b91506104938261042c565b604082019050919050565b600060208201905081810360008301526104b78161047b565b9050919050565b7f546869732070726f6a656374206e6f74206176616c6961626c6520746f20667560008201527f6e64000000000000000000000000000000000000000000000000000000000000602082015250565b600061051a602283610389565b9150610525826104be565b604082019050919050565b600060208201905081810360008301526105498161050d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061058a8261031f565b91506105958361031f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105ca576105c9610550565b5b82820190509291505056fea2646970667358221220d9c535def403fe291961fae0ff6adc4addcaac979ba9c143f87725936bf3e87c64736f6c634300080c0033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80630cf010511461004f5780631c8eac0f14610066578063342354431461007d57806374f21848146100a8578063d9a9ab78146100b2575b600080fd5b34801561005b57600080fd5b506100646100dd565b005b34801561007257600080fd5b5061007b610188565b005b34801561008957600080fd5b5061009261029c565b60405161009f9190610338565b60405180910390f35b6100b06102a2565b005b3480156100be57600080fd5b506100c761030c565b6040516100d4919061036e565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461016b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101629061040c565b60405180910390fd5b6001600260006101000a81548160ff021916908315150217905550565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610216576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161020d9061049e565b60405180910390fd5b6000600260006101000a81548160ff02191690831515021790555060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6001549081150290604051600060405180830381858888f19350505050158015610299573d6000803e3d6000fd5b50565b60015481565b600260009054906101000a900460ff166102f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e890610530565b60405180910390fd5b3460016000828254610303919061057f565b92505081905550565b600260009054906101000a900460ff1681565b6000819050919050565b6103328161031f565b82525050565b600060208201905061034d6000830184610329565b92915050565b60008115159050919050565b61036881610353565b82525050565b6000602082019050610383600083018461035f565b92915050565b600082825260208201905092915050565b7f4f6e6c79206f776e65722063616e20737461727420746869732066756e64696e60008201527f672070726f6a6563740000000000000000000000000000000000000000000000602082015250565b60006103f6602983610389565b91506104018261039a565b604082019050919050565b60006020820190508181036000830152610425816103e9565b9050919050565b7f4f6e6c79206f776e65722063616e20636c6f736520746869732066756e64696e60008201527f672070726f6a6563740000000000000000000000000000000000000000000000602082015250565b6000610488602983610389565b91506104938261042c565b604082019050919050565b600060208201905081810360008301526104b78161047b565b9050919050565b7f546869732070726f6a656374206e6f74206176616c6961626c6520746f20667560008201527f6e64000000000000000000000000000000000000000000000000000000000000602082015250565b600061051a602283610389565b9150610525826104be565b604082019050919050565b600060208201905081810360008301526105498161050d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061058a8261031f565b91506105958361031f565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105ca576105c9610550565b5b82820190509291505056fea2646970667358221220d9c535def403fe291961fae0ff6adc4addcaac979ba9c143f87725936bf3e87c64736f6c634300080c0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4624:2",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:32:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:16:2",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "73:5:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:2",
                "type": ""
              }
            ],
            "src": "7:77:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "155:53:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "172:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "195:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "177:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "177:24:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:37:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "165:37:2"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "143:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "150:3:2",
                "type": ""
              }
            ],
            "src": "90:118:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "312:124:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "322:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "334:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "345:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "330:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "330:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "322:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "402:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "415:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "426:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "411:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "411:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "358:43:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "358:71:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "358:71:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "284:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "296:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "307:4:2",
                "type": ""
              }
            ],
            "src": "214:222:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "484:48:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "494:32:2",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "519:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "512:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "512:13:2"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "505:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "505:21:2"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "494:7:2"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "466:5:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "476:7:2",
                "type": ""
              }
            ],
            "src": "442:90:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:50:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "614:3:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:2"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "619:14:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "619:21:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "607:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:34:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "607:34:2"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "585:5:2",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "592:3:2",
                "type": ""
              }
            ],
            "src": "538:109:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "745:118:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "755:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "767:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "778:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "763:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "763:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "755:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "829:6:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "842:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "853:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "838:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "838:17:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "791:37:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "791:65:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "791:65:2"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "717:9:2",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "729:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "740:4:2",
                "type": ""
              }
            ],
            "src": "653:210:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:73:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "982:3:2"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "987:6:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "975:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "975:19:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "975:19:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1003:29:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1022:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1027:4:2",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1018:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:14:2"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1003:11:2"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "937:3:2",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "942:6:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "953:11:2",
                "type": ""
              }
            ],
            "src": "869:169:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1150:122:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1172:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1180:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1168:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1168:14:2"
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20737461727420746869732066756e64696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1184:34:2",
                        "type": "",
                        "value": "Only owner can start this fundin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1161:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1161:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1161:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1240:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1248:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1236:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1236:15:2"
                      },
                      {
                        "hexValue": "672070726f6a656374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1253:11:2",
                        "type": "",
                        "value": "g project"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1229:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1229:36:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1229:36:2"
                }
              ]
            },
            "name": "store_literal_in_memory_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1142:6:2",
                "type": ""
              }
            ],
            "src": "1044:228:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1424:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1434:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1500:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1505:2:2",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1441:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1441:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "1434:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1606:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f",
                      "nodeType": "YulIdentifier",
                      "src": "1517:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1517:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1517:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1619:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1630:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1635:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1626:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1626:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1619:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1412:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1420:3:2",
                "type": ""
              }
            ],
            "src": "1278:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1821:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1831:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1843:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1854:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1839:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1839:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1831:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1878:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1889:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1874:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1874:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "1897:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1903:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1893:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1893:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1867:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1867:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1867:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1923:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2057:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1931:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1931:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1923:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1801:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1816:4:2",
                "type": ""
              }
            ],
            "src": "1650:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2181:122:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2203:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2211:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2199:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2199:14:2"
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20636c6f736520746869732066756e64696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2215:34:2",
                        "type": "",
                        "value": "Only owner can close this fundin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2192:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2192:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2192:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "2271:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2279:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2267:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2267:15:2"
                      },
                      {
                        "hexValue": "672070726f6a656374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2284:11:2",
                        "type": "",
                        "value": "g project"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:36:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2260:36:2"
                }
              ]
            },
            "name": "store_literal_in_memory_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "2173:6:2",
                "type": ""
              }
            ],
            "src": "2075:228:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2455:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2465:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2531:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2536:2:2",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2472:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2472:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2465:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2637:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a",
                      "nodeType": "YulIdentifier",
                      "src": "2548:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2548:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2548:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2650:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2661:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2666:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2657:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2657:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2650:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2443:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2451:3:2",
                "type": ""
              }
            ],
            "src": "2309:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2852:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2862:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2874:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2885:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2870:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2870:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2862:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2909:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2920:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2905:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2905:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "2928:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2934:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2924:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2924:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2898:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2898:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2898:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2954:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3088:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2962:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2962:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2954:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2832:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2847:4:2",
                "type": ""
              }
            ],
            "src": "2681:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3212:115:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3234:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3242:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3230:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3230:14:2"
                      },
                      {
                        "hexValue": "546869732070726f6a656374206e6f74206176616c6961626c6520746f206675",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3246:34:2",
                        "type": "",
                        "value": "This project not avaliable to fu"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3223:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:58:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3223:58:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "3302:6:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3310:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3298:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3298:15:2"
                      },
                      {
                        "hexValue": "6e64",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3315:4:2",
                        "type": "",
                        "value": "nd"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3291:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3291:29:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3291:29:2"
                }
              ]
            },
            "name": "store_literal_in_memory_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "3204:6:2",
                "type": ""
              }
            ],
            "src": "3106:221:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3479:220:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3489:74:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3555:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3560:2:2",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3496:58:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3496:67:2"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3489:3:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3661:3:2"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8",
                      "nodeType": "YulIdentifier",
                      "src": "3572:88:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3572:93:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3572:93:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3674:19:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3685:3:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3690:2:2",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3681:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3681:12:2"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3674:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3467:3:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3475:3:2",
                "type": ""
              }
            ],
            "src": "3333:366:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3876:248:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3886:26:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3898:9:2"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3909:2:2",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3894:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3894:18:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3886:4:2"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3933:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3944:1:2",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3929:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3929:17:2"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3952:4:2"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3958:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3948:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3948:20:2"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3922:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3922:47:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3922:47:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3978:139:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4112:4:2"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3986:124:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3986:131:2"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3978:4:2"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3856:9:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3871:4:2",
                "type": ""
              }
            ],
            "src": "3705:419:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4158:152:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4175:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4178:77:2",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4168:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4168:88:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4168:88:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4272:1:2",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4275:4:2",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4265:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4265:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4265:15:2"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4296:1:2",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4299:4:2",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4289:6:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4289:15:2"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4289:15:2"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4130:180:2"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4360:261:2",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4370:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4393:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4375:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4375:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "4370:1:2"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4404:25:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4427:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "4409:17:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4409:20:2"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "4404:1:2"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4567:22:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4569:16:2"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4569:18:2"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4569:18:2"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4488:1:2"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4495:66:2",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4563:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4491:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4491:74:2"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4485:2:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4485:81:2"
                  },
                  "nodeType": "YulIf",
                  "src": "4482:107:2"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4599:16:2",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4610:1:2"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4613:1:2"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4606:3:2"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4606:9:2"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4599:3:2"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4347:1:2",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4350:1:2",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4356:3:2",
                "type": ""
              }
            ],
            "src": "4316:305:2"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can start this fundin\")\n\n        mstore(add(memPtr, 32), \"g project\")\n\n    }\n\n    function abi_encode_t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can close this fundin\")\n\n        mstore(add(memPtr, 32), \"g project\")\n\n    }\n\n    function abi_encode_t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"This project not avaliable to fu\")\n\n        mstore(add(memPtr, 32), \"nd\")\n\n    }\n\n    function abi_encode_t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n}\n",
      "id": 2,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "64:680:0:-:0;;;168:51;;;;;;;;;;201:10;193:5;;:18;;;;;;;;;;;;;;;;;;64:680;;;;;;",
  "deployedSourceMap": "64:680:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:153;;;;;;;;;;;;;:::i;:::-;;544:197;;;;;;;;;;;;;:::i;:::-;;108:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;229:145;;;:::i;:::-;;136:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:153;448:5;;;;;;;;;;434:19;;:10;:19;;;426:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;524:4;510:11;;:18;;;;;;;;;;;;;;;;;;383:153::o;544:197::-;607:5;;;;;;;;;;593:19;;:10;:19;;;585:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;683:5;669:11;;:19;;;;;;;;;;;;;;;;;;707:5;;;;;;;;;;699:23;;:34;723:9;;699:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;544:197::o;108:21::-;;;;:::o;229:145::-;283:11;;;;;;;;;;;275:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;357:9;344;;:22;;;;;;;:::i;:::-;;;;;;;;229:145::o;136:23::-;;;;;;;;;;;;;:::o;7:77:2:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:90::-;476:7;519:5;512:13;505:21;494:32;;442:90;;;:::o;538:109::-;619:21;634:5;619:21;:::i;:::-;614:3;607:34;538:109;;:::o;653:210::-;740:4;778:2;767:9;763:18;755:26;;791:65;853:1;842:9;838:17;829:6;791:65;:::i;:::-;653:210;;;;:::o;869:169::-;953:11;987:6;982:3;975:19;1027:4;1022:3;1018:14;1003:29;;869:169;;;;:::o;1044:228::-;1184:34;1180:1;1172:6;1168:14;1161:58;1253:11;1248:2;1240:6;1236:15;1229:36;1044:228;:::o;1278:366::-;1420:3;1441:67;1505:2;1500:3;1441:67;:::i;:::-;1434:74;;1517:93;1606:3;1517:93;:::i;:::-;1635:2;1630:3;1626:12;1619:19;;1278:366;;;:::o;1650:419::-;1816:4;1854:2;1843:9;1839:18;1831:26;;1903:9;1897:4;1893:20;1889:1;1878:9;1874:17;1867:47;1931:131;2057:4;1931:131;:::i;:::-;1923:139;;1650:419;;;:::o;2075:228::-;2215:34;2211:1;2203:6;2199:14;2192:58;2284:11;2279:2;2271:6;2267:15;2260:36;2075:228;:::o;2309:366::-;2451:3;2472:67;2536:2;2531:3;2472:67;:::i;:::-;2465:74;;2548:93;2637:3;2548:93;:::i;:::-;2666:2;2661:3;2657:12;2650:19;;2309:366;;;:::o;2681:419::-;2847:4;2885:2;2874:9;2870:18;2862:26;;2934:9;2928:4;2924:20;2920:1;2909:9;2905:17;2898:47;2962:131;3088:4;2962:131;:::i;:::-;2954:139;;2681:419;;;:::o;3106:221::-;3246:34;3242:1;3234:6;3230:14;3223:58;3315:4;3310:2;3302:6;3298:15;3291:29;3106:221;:::o;3333:366::-;3475:3;3496:67;3560:2;3555:3;3496:67;:::i;:::-;3489:74;;3572:93;3661:3;3572:93;:::i;:::-;3690:2;3685:3;3681:12;3674:19;;3333:366;;;:::o;3705:419::-;3871:4;3909:2;3898:9;3894:18;3886:26;;3958:9;3952:4;3948:20;3944:1;3933:9;3929:17;3922:47;3986:131;4112:4;3986:131;:::i;:::-;3978:139;;3705:419;;;:::o;4130:180::-;4178:77;4175:1;4168:88;4275:4;4272:1;4265:15;4299:4;4296:1;4289:15;4316:305;4356:3;4375:20;4393:1;4375:20;:::i;:::-;4370:25;;4409:20;4427:1;4409:20;:::i;:::-;4404:25;;4563:1;4495:66;4491:74;4488:1;4485:81;4482:107;;;4569:18;;:::i;:::-;4482:107;4613:1;4610;4606:9;4599:16;;4316:305;;;;:::o",
  "source": "pragma solidity ^0.8.1;\r\n// SPDX-License-Identifier: GPL-3.0\r\n\r\ncontract Funding {\r\n    address owner;\r\n    uint public moneyPool;\r\n    bool public isAvaliable;\r\n\r\n    constructor() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n\r\n    function fundTo() payable external {\r\n        require(isAvaliable, \"This project not avaliable to fund\");\r\n        moneyPool += msg.value;\r\n    }\r\n\r\n     function startFunding() external{\r\n        require(msg.sender == owner, \"Only owner can start this funding project\");\r\n        isAvaliable = true;\r\n    }\r\n\r\n    function endFunding() external{\r\n        require(msg.sender == owner, \"Only owner can close this funding project\");\r\n        isAvaliable = false;\r\n        payable(owner).transfer(moneyPool);\r\n    }\r\n}",
  "sourcePath": "E:\\Project\\Dapp-ProjectFunding\\contracts\\Funding.sol",
  "ast": {
    "absolutePath": "project:/contracts/Funding.sol",
    "exportedSymbols": {
      "Funding": [
        71
      ]
    },
    "id": 72,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Funding",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 71,
        "linearizedBaseContracts": [
          71
        ],
        "name": "Funding",
        "nameLocation": "73:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "96:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "88:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "88:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "34235443",
            "id": 5,
            "mutability": "mutable",
            "name": "moneyPool",
            "nameLocation": "120:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "108:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "108:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d9a9ab78",
            "id": 7,
            "mutability": "mutable",
            "name": "isAvaliable",
            "nameLocation": "148:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "136:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "136:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "182:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "193:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "201:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "201:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "193:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "193:18:0"
                }
              ]
            },
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "179:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:0:0"
            },
            "scope": 71,
            "src": "168:51:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "264:110:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20,
                        "name": "isAvaliable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "283:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f6a656374206e6f74206176616c6961626c6520746f2066756e64",
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "296:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8",
                          "typeString": "literal_string \"This project not avaliable to fund\""
                        },
                        "value": "This project not avaliable to fund"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8",
                          "typeString": "literal_string \"This project not avaliable to fund\""
                        }
                      ],
                      "id": 19,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "275:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "275:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "275:58:0"
                },
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "moneyPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "344:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 25,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "357:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "357:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "344:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "344:22:0"
                }
              ]
            },
            "functionSelector": "74f21848",
            "id": 30,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundTo",
            "nameLocation": "238:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "244:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:0:0"
            },
            "scope": 71,
            "src": "229:145:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "415:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 34,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "434:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "434:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "448:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "434:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20737461727420746869732066756e64696e672070726f6a656374",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "455:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f",
                          "typeString": "literal_string \"Only owner can start this funding project\""
                        },
                        "value": "Only owner can start this funding project"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f",
                          "typeString": "literal_string \"Only owner can start this funding project\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "426:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "426:73:0"
                },
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "isAvaliable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "510:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "524:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "510:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "510:18:0"
                }
              ]
            },
            "functionSelector": "0cf01051",
            "id": 46,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startFunding",
            "nameLocation": "392:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:2:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:0:0"
            },
            "scope": 71,
            "src": "383:153:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "574:167:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "593:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "593:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 52,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "607:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "593:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20636c6f736520746869732066756e64696e672070726f6a656374",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "614:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a",
                          "typeString": "literal_string \"Only owner can close this funding project\""
                        },
                        "value": "Only owner can close this funding project"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a",
                          "typeString": "literal_string \"Only owner can close this funding project\""
                        }
                      ],
                      "id": 49,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "585:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "585:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "585:73:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "isAvaliable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "669:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "683:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "669:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "669:19:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "moneyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "723:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 63,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "707:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "699:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 61,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "699:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "699:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "699:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "699:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "699:34:0"
                }
              ]
            },
            "functionSelector": "1c8eac0f",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endFunding",
            "nameLocation": "553:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:2:0"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:0"
            },
            "scope": 71,
            "src": "544:197:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 72,
        "src": "64:680:0",
        "usedErrors": []
      }
    ],
    "src": "0:744:0"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Funding.sol",
    "exportedSymbols": {
      "Funding": [
        71
      ]
    },
    "id": 72,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Funding",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 71,
        "linearizedBaseContracts": [
          71
        ],
        "name": "Funding",
        "nameLocation": "73:7:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "96:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "88:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "88:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "34235443",
            "id": 5,
            "mutability": "mutable",
            "name": "moneyPool",
            "nameLocation": "120:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "108:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "108:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d9a9ab78",
            "id": 7,
            "mutability": "mutable",
            "name": "isAvaliable",
            "nameLocation": "148:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 71,
            "src": "136:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 6,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "136:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 15,
              "nodeType": "Block",
              "src": "182:37:0",
              "statements": [
                {
                  "expression": {
                    "id": 13,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "193:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 11,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "201:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 12,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "201:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "193:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 14,
                  "nodeType": "ExpressionStatement",
                  "src": "193:18:0"
                }
              ]
            },
            "id": 16,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "179:2:0"
            },
            "returnParameters": {
              "id": 9,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "182:0:0"
            },
            "scope": 71,
            "src": "168:51:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "264:110:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 20,
                        "name": "isAvaliable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "283:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546869732070726f6a656374206e6f74206176616c6961626c6520746f2066756e64",
                        "id": 21,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "296:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8",
                          "typeString": "literal_string \"This project not avaliable to fund\""
                        },
                        "value": "This project not avaliable to fund"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e89139958601a58790cd49afa1f3f059a6cebf23375efdf74f4dd7604cb30d8",
                          "typeString": "literal_string \"This project not avaliable to fund\""
                        }
                      ],
                      "id": 19,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "275:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "275:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "275:58:0"
                },
                {
                  "expression": {
                    "id": 27,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "moneyPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "344:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 25,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "357:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 26,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "357:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "344:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 28,
                  "nodeType": "ExpressionStatement",
                  "src": "344:22:0"
                }
              ]
            },
            "functionSelector": "74f21848",
            "id": 30,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fundTo",
            "nameLocation": "238:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "244:2:0"
            },
            "returnParameters": {
              "id": 18,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "264:0:0"
            },
            "scope": 71,
            "src": "229:145:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "415:121:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 34,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "434:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "434:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 36,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "448:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "434:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20737461727420746869732066756e64696e672070726f6a656374",
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "455:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f",
                          "typeString": "literal_string \"Only owner can start this funding project\""
                        },
                        "value": "Only owner can start this funding project"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0a9e14f78d8ad7f25ca1a0b566ab8311835eeae394c1e56a9caea2fc5c10f8f",
                          "typeString": "literal_string \"Only owner can start this funding project\""
                        }
                      ],
                      "id": 33,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "426:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "426:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "426:73:0"
                },
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "isAvaliable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "510:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 42,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "524:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "510:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "510:18:0"
                }
              ]
            },
            "functionSelector": "0cf01051",
            "id": 46,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "startFunding",
            "nameLocation": "392:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "404:2:0"
            },
            "returnParameters": {
              "id": 32,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "415:0:0"
            },
            "scope": 71,
            "src": "383:153:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "574:167:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "593:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "593:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 52,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "607:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "593:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e20636c6f736520746869732066756e64696e672070726f6a656374",
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "614:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a",
                          "typeString": "literal_string \"Only owner can close this funding project\""
                        },
                        "value": "Only owner can close this funding project"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa9f81d03b5980fb2b9d630a7994094239a42bc135e19938a8b2539cdfebb65a",
                          "typeString": "literal_string \"Only owner can close this funding project\""
                        }
                      ],
                      "id": 49,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "585:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 55,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "585:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 56,
                  "nodeType": "ExpressionStatement",
                  "src": "585:73:0"
                },
                {
                  "expression": {
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 57,
                      "name": "isAvaliable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "669:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 58,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "683:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "669:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "669:19:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 66,
                        "name": "moneyPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "723:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 63,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "707:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "699:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 61,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "699:8:0",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "699:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "699:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "699:34:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "699:34:0"
                }
              ]
            },
            "functionSelector": "1c8eac0f",
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "endFunding",
            "nameLocation": "553:10:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "563:2:0"
            },
            "returnParameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "574:0:0"
            },
            "scope": 71,
            "src": "544:197:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 72,
        "src": "64:680:0",
        "usedErrors": []
      }
    ],
    "src": "0:744:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.12+commit.f00d7308.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.5",
  "updatedAt": "2022-03-10T04:22:50.841Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}